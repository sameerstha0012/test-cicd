name: Python CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4.3.0

      # Set up Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.9'

      # Cache dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v4.2.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --require-hashes -r requirements.txt
          pip install build twine

      # Run linting with flake8
      - name: Lint with flake8
        run: |
          flake8 . --max-line-length=120 --exclude=venv,.venv,env --show-source --statistics
        continue-on-error: false

      # Run tests with unittest
      - name: Test with unittest
        run: |
          python -m unittest discover -v -s .

      # Build package
      - name: Build package
        run: |
          python -m build

      # Check distribution
      - name: Check distribution
        run: |
          python -m twine check dist/*

      # Deploy to PyPI (only on main branch push)
      - name: Publish to PyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload --skip-existing dist/*
